---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: cert-webhook
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: webhook

spec:
  replicas: 1
  revisionHistoryLimit: 3

  strategy:
    type: Recreate

  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: webhook

  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/component: webhook

    spec:
      enableServiceLinks: false
      serviceAccountName: cert-webhook

      securityContext:
        runAsNonRoot: true

      containers:
        - name: server
          image: cert-webhook
          imagePullPolicy: IfNotPresent

          args:
            - --v=2
            - --secure-port=10250
            - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
            - --dynamic-serving-ca-secret-name=webhook-ca
            - --dynamic-serving-dns-names=cert-webhook,cert-webhook.$(POD_NAMESPACE),cert-webhook.$(POD_NAMESPACE).svc

          securityContext:
            allowPrivilegeEscalation: false

          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          ports:
            - name: https
              containerPort: 10250
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1

          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1

...
